!function(){"use strict";var app=angular.module("illumination");app.directive("scheduler",[function(){return{restrict:"E",templateUrl:"plugins/plugins/scheduler/template/template.html",controller:"schedulerController",controllerAs:"schedulerCtrl",replace:!0}}]),app.controller("schedulerController",["schedulerService","$timeout","eventEmitter",function(schedulerService,$timeout,eventEmitter){function onSchedulerStateChanged(state){$('[name="bootstrap-switch-scheduler"]').bootstrapSwitch("state",state),0==state?eventEmitter.emit("enableGpios"):eventEmitter.emit("disableGpios")}function getHourAndMinute(time){var hour=parseInt(time.split(":")[0]),minute=parseInt(time.split(":")[1]);return[hour,minute]}var schedulerCtrl=this;schedulerCtrl.state=!1,schedulerCtrl.error="",schedulerCtrl.dateTimePickers=[new Date,new Date],schedulerCtrl.save=function(){var startTime=schedulerCtrl.dateTimePickers[0].getHours()+":"+schedulerCtrl.dateTimePickers[0].getMinutes(),endTime=schedulerCtrl.dateTimePickers[1].getHours()+":"+schedulerCtrl.dateTimePickers[1].getMinutes();schedulerService.setSchedulerSchedule(startTime,endTime,function(err,result){return err?void console.log(err):void 0})},eventEmitter.emit("updateGpios"),$timeout(function(){var bootstrapSwitch=$("[name='bootstrap-switch-scheduler']").bootstrapSwitch();bootstrapSwitch.on("switchChange.bootstrapSwitch",function(event,state){schedulerService.setSchedulerState(state,function(err,result){schedulerService.setSchedulerState(state,function(err,response){return err?(console.log(err),$('[name="bootstrap-switch-scheduler"]').bootstrapSwitch("state",!1)):void onSchedulerStateChanged(response.state)})})}),schedulerService.getSchedulerState(function(err,response){if(err)return console.log(err),$('[name="bootstrap-switch-scheduler"]').bootstrapSwitch("state",!1);var now=new Date,startHourAndMinute=getHourAndMinute(response.startTime);schedulerCtrl.dateTimePickers[0]=new Date(now.getFullYear(),now.getMonth(),now.getDate(),startHourAndMinute[0],startHourAndMinute[1],0);var endHourAndMinute=getHourAndMinute(response.endTime);schedulerCtrl.dateTimePickers[1]=new Date(now.getFullYear(),now.getMonth(),now.getDate(),endHourAndMinute[0],endHourAndMinute[1],0),onSchedulerStateChanged(response.state)})},100)}]),app.service("schedulerService",["$http",function($http){var service={getSchedulerState:function(callback){var promise=$http.get("/scheduler");promise.then(function(response){callback(null,response.data)},function(err){callback(err,null)})},setSchedulerState:function(state,callback){var promise=$http.put("/scheduler",{state:state});promise.then(function(response){callback(null,response.data)},function(err){callback(err,null)})},setSchedulerSchedule:function(startTime,endTime,callback){var promise=$http.put("/scheduler/interval",{startTime:startTime,endTime:endTime});promise.then(function(response){callback(null,response.data)},function(err){callback(err,null)})}};return service}])}();